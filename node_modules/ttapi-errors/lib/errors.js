// Generated by CoffeeScript 1.6.3
(function() {
  var AbstractError, ConnectionError, SocketError, TimeoutError, util,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  util = require('util');

  AbstractError = (function(_super) {
    __extends(AbstractError, _super);

    function AbstractError(msg, constr) {
      Error.captureStackTrace(this, constr != null ? constr : this);
      this.message = msg != null ? msg : 'Error';
    }

    return AbstractError;

  })(Error);

  AbstractError.prototype.name = 'AbstractError';

  ConnectionError = (function(_super) {
    __extends(ConnectionError, _super);

    function ConnectionError(msg) {
      ConnectionError.__super__.constructor.call(this, msg, this.constructor);
    }

    return ConnectionError;

  })(AbstractError);

  ConnectionError.prototype.name = 'ConnectionError';

  SocketError = (function(_super) {
    __extends(SocketError, _super);

    function SocketError(err) {
      SocketError.__super__.constructor.call(this, err.message, err.constructor);
    }

    return SocketError;

  })(AbstractError);

  SocketError.prototype.name = 'SocketError';

  TimeoutError = (function(_super) {
    __extends(TimeoutError, _super);

    function TimeoutError(msg) {
      TimeoutError.__super__.constructor.call(this, msg, this.constructor);
    }

    return TimeoutError;

  })(AbstractError);

  TimeoutError.prototype.name = 'TimeoutError';

  exports.AbstractError = AbstractError;

  exports.ConnectionError = ConnectionError;

  exports.SocketError = SocketError;

  exports.TimeoutError = TimeoutError;

}).call(this);
